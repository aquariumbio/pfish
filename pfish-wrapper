#!/bin/sh

# pfish
# A wrapper script for invoking pfish with docker
# Put this script in $PATH as `pfish`
#
# Inspired by https://spin.atomicobject.com/2015/11/30/command-line-tools-docker/

PROGNAME="$(basename $0)"
VERSION="0.0.2"

# Helper functions for guards
error(){
  error_code=$1
  echo "ERROR: $2" >&2
  echo "($PROGNAME wrapper version: $VERSION, error code: $error_code )" &>2
  exit $1
}
check_cmd_in_path(){
  cmd=$1
  which $cmd > /dev/null 2>&1 || error 1 "$cmd not found!"
}

# Guards (checks for dependencies)
check_cmd_in_path docker
#check_cmd_in_path docker-machine
#docker-machine active > /dev/null 2>&1 || error 2 "No active docker-machine VM found."

# ensure a configuration directory
CONFIG_DIR=$HOME/.pfish
mkdir -p $CONFIG_DIR

# Set up mounted volumes, environment, and run our containerized command
exec docker run \
  --net=host \
  --interactive --tty --rm \
  --volume "$PWD":/wd \
  --volume "$CONFIG_DIR:/script/config" \
  --workdir /wd \
  "aquariumbio/pfish:$VERSION" "$@"